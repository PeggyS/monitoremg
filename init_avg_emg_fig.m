function init_avg_emg_fig(app)

% if there is already a sici fig, clear old axes & fit info
if ~isempty(findobj('Name', 'Average EMG'))
	app.avg_emg_axes;
	
else

	app.avg_emg_fig = figure('Position', [1544 483 506 505], ...
		'NumberTitle', 'off', 'Name', 'Average EMG') %%, ...
 		% 'MenuBar', 'none', 'ToolBar', 'none');


	app.avg_emg_axes = axes('Position', [0.16 0.3 0.775 0.6], ...
		'Fontsize', 20);
	ylabel('EMG (µV)')
	xlabel('Time (msec)')


	seg_time = (app.params.postTriggerTime + app.params.preTriggerTime) / 1000;
	seg_num_points = round(app.params.sampFreq*seg_time);
	t = (0:1/app.params.sampFreq:(seg_time-1/app.params.sampFreq))*1000 - app.params.preTriggerTime;

	% save the time vector for the emg data in the axes userdata
	app.avg_emg_axes.UserData.t = t;

	app.avg_num_lines = uicontrol(app.avg_emg_fig, 'Style', 'text', ...
				'String', 'Num trials = 0', ...
				'Units', 'normalized', ...
				'Position', [0.11 0.019 0.25 0.06], ...
	 			'Fontsize', 16);

% 	% userdata is a table with the data
% 	app.avg_emg_axes.UserData = cell2table(cell(0,4), ...
% 		'VariableNames', {'Epoch', 'Use', 'MagStim_Setting', 'MEPAmpl_uVPp'});

% 	% edit boxes for test & conditioning stim values
% 	uicontrol(app.sici_fig, 'Style', 'text', ...
% 				'String', 'TS', ...
% 				'Units', 'normalized', ...
% 				'Position', [0.31 0.015 0.05 0.06], ...
% 	 			'Fontsize', 16);
% 	app.sici_ui.ts = uicontrol(app.sici_fig, 'Style', 'edit', ...
% 				'Units', 'normalized', ...
% 				'Position', [0.36 0.019 0.1 0.06], ...
% 	 			'Fontsize', 16, ...
% 	 			'Callback', {@sici_edit_ts, app});
% 	uicontrol(app.sici_fig, 'Style', 'text', ...
% 				'String', 'CS', ...
% 				'Units', 'normalized', ...
% 				'Position', [0.48 0.015 0.05 0.06], ...
% 	 			'Fontsize', 16);
% 	app.sici_ui.cs = uicontrol(app.sici_fig, 'Style', 'edit', ...
% 				'Units', 'normalized', ...
% 				'Position', [0.53 0.019 0.1 0.06], ...
% 	 			'Fontsize', 16);
	
	% h = uicontrol(app.sici_fig, 'Style', 'pushbutton', ...
	% 			'String', 'Compute Mean & SD', ...
	% 			'Units', 'normalized', ...
	% 			'Position', [0.35 0.019 0.4 0.06], ...
	% 			'Fontsize', 16, ...
	% 			'Callback', {@sici_mean, app});

	% button to update data
	h_save = uicontrol(app.avg_emg_fig, 'Style', 'pushbutton', ...
				'String', 'Update', ...
				'Units', 'normalized', ...
				'Position', [0.5 0.019 0.2 0.06], ...
				'Fontsize', 16, ...
				'Tag', 'pushbutton', ...
				'Callback', {@update_avg_emg, app});

	% button to save datapoints
	h_save = uicontrol(app.avg_emg_fig, 'Style', 'pushbutton', ...
				'String', 'Save', ...
				'Units', 'normalized', ...
				'Position', [0.78 0.019 0.15 0.06], ...
				'Fontsize', 16, ...
				'Tag', 'pushbutton'); %%, ...
% 				'Callback', {@save_and_close_sici, app});

	% button to print as png
	h_print = uicontrol(app.avg_emg_fig, 'Style', 'pushbutton', ...
				'String', 'P', ...
				'Units', 'normalized', ...
				'Position', [0.95 0.03 0.04 0.04], ...
				'Fontsize', 8); %%, ...
% 				'Callback', {@print_sici, app});
	
	
	% set a close function to save the data
%  	app.sici_fig.CloseRequestFcn = {@save_and_close_sici, app};

% 	% popup menu to choose the type of stim being recorded - only valid when
% 	% recording data (runnin from emg_rc app)
% 	if any(strcmp(properties(app), 'sici_popmenu')) 
% 		app.sici_popmenu = uicontrol(app.sici_fig, 'style','popup', ...
% 			'string',{'Test Stim';'SICI';'ICF'}, ...
% 			'Units', 'normalized', ...
% 			'Position', [0.06 0.01 0.25 0.07], ...
% 			'FontSize', 16);
% 	end

end

